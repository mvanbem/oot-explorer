(function() {var implementors = {};
implementors["deref_map"] = [{"text":"impl&lt;'a, T, FRef, FMut, R:&nbsp;?Sized&gt; Freeze for MapMut&lt;'a, T, FRef, FMut, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;FMut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;FRef: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, F, R:&nbsp;?Sized&gt; Freeze for MapRef&lt;'a, T, F, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["oot_explorer_core"] = [{"text":"impl&lt;'scope&gt; Freeze for Collision&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for Vertex&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for Triangle&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for TriangleType&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for CameraData&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for WaterBox&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope, T&gt; Freeze for Iter&lt;'scope, T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for VromAddr","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for FileSystemTableEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for LazyFileSystem&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for FileMetadata","synthetic":true,"types":[]},{"text":"impl Freeze for VirtualSliceError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for DisplayList&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Qu0_16","synthetic":true,"types":[]},{"text":"impl Freeze for Qu10_2","synthetic":true,"types":[]},{"text":"impl Freeze for Qu1_11","synthetic":true,"types":[]},{"text":"impl Freeze for MtxFlags","synthetic":true,"types":[]},{"text":"impl Freeze for GeometryMode","synthetic":true,"types":[]},{"text":"impl Freeze for OtherModeL","synthetic":true,"types":[]},{"text":"impl Freeze for OtherModeLMask","synthetic":true,"types":[]},{"text":"impl Freeze for OtherModeH","synthetic":true,"types":[]},{"text":"impl Freeze for OtherModeHMask","synthetic":true,"types":[]},{"text":"impl Freeze for CombinerReference","synthetic":true,"types":[]},{"text":"impl Freeze for ColorCombine","synthetic":true,"types":[]},{"text":"impl Freeze for AlphaCombine","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for UnlitVertex&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for LitVertex&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Instruction","synthetic":true,"types":[]},{"text":"impl Freeze for TextureFormat","synthetic":true,"types":[]},{"text":"impl Freeze for TextureDepth","synthetic":true,"types":[]},{"text":"impl Freeze for ColorInput","synthetic":true,"types":[]},{"text":"impl Freeze for AlphaInput","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for Actor&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for AlternateHeadersHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for RoomHeaderType","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for RoomHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for ActorListHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for WindHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for BehaviorHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for MeshHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for ObjectListHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for TimeHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for RoomSkyboxHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for EndHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for RoomSoundHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for RoomHeaderVariant&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SceneHeaderType","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for SceneHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for StartPositionsHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for CollisionHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for RoomListHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for RoomListEntry&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for EntranceListHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for Entrance&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for SpecialObjectsHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ElfMessage","synthetic":true,"types":[]},{"text":"impl Freeze for GlobalObject","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for PathwaysHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for TransitionActorsHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for TransitionActor&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for LightingHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for SceneSkyboxHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for ExitListHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for Exit&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for EndHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for SceneSoundHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for CameraAndWorldMapHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Camera","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for SceneHeaderVariant&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for MeshType","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for Mesh&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for SimpleMesh&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for SimpleMeshEntry&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for JfifMeshType","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for JfifMesh&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for SingleJfif&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for MultipleJfif&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for MultipleJfifEntry&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for Background&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for ClippedMesh&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for ClippedMeshEntry&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for MeshVariant&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for JfifMeshVariant&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ObjectId","synthetic":true,"types":[]},{"text":"impl Freeze for BitfieldDescriptor","synthetic":true,"types":[]},{"text":"impl Freeze for BitfieldSpan","synthetic":true,"types":[]},{"text":"impl Freeze for EnumDescriptor","synthetic":true,"types":[]},{"text":"impl Freeze for PointerDescriptor","synthetic":true,"types":[]},{"text":"impl Freeze for PrimitiveType","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Sourced&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for RangeSourced&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for StructDescriptor","synthetic":true,"types":[]},{"text":"impl Freeze for FieldDescriptor","synthetic":true,"types":[]},{"text":"impl Freeze for UnionDescriptor","synthetic":true,"types":[]},{"text":"impl Freeze for StructFieldLocation","synthetic":true,"types":[]},{"text":"impl Freeze for TypeDescriptor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Rom&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for RomAddr","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for Room&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for Scene&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Freeze for Lighting&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SegmentAddr","synthetic":true,"types":[]},{"text":"impl Freeze for Segment","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SegmentCtx&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SegmentResolveError","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Slice&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SceneTableEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for MaxEffort","synthetic":true,"types":[]}];
implementors["oot_explorer_expr"] = [{"text":"impl Freeze for Key","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Context&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for ExprWithContext&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Expr&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["oot_explorer_gl"] = [{"text":"impl Freeze for Batch","synthetic":true,"types":[]},{"text":"impl Freeze for DisplayListInterpreter","synthetic":true,"types":[]},{"text":"impl Freeze for RcpState","synthetic":true,"types":[]},{"text":"impl Freeze for Point","synthetic":true,"types":[]},{"text":"impl Freeze for Matrix","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for MatrixCol&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for MatrixColMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for RdpOtherMode","synthetic":true,"types":[]},{"text":"impl Freeze for CombinerState","synthetic":true,"types":[]},{"text":"impl Freeze for TextureSource","synthetic":true,"types":[]},{"text":"impl Freeze for Tile","synthetic":true,"types":[]},{"text":"impl Freeze for TileDimensions","synthetic":true,"types":[]},{"text":"impl Freeze for TileAttributes","synthetic":true,"types":[]},{"text":"impl Freeze for RspTextureState","synthetic":true,"types":[]},{"text":"impl Freeze for Tmem","synthetic":true,"types":[]},{"text":"impl Freeze for TmemRegion","synthetic":true,"types":[]},{"text":"impl Freeze for GetSourceError","synthetic":true,"types":[]},{"text":"impl Freeze for TmemSource","synthetic":true,"types":[]},{"text":"impl Freeze for Cycle","synthetic":true,"types":[]},{"text":"impl Freeze for ShaderState","synthetic":true,"types":[]},{"text":"impl Freeze for TextureState","synthetic":true,"types":[]},{"text":"impl Freeze for TextureParams","synthetic":true,"types":[]},{"text":"impl Freeze for TexCoordParams","synthetic":true,"types":[]},{"text":"impl Freeze for TextureDescriptor","synthetic":true,"types":[]},{"text":"impl Freeze for PaletteSource","synthetic":true,"types":[]},{"text":"impl Freeze for DecodedTexture","synthetic":true,"types":[]},{"text":"impl Freeze for DecodeError","synthetic":true,"types":[]}];
implementors["oot_explorer_web"] = [{"text":"impl Freeze for Context","synthetic":true,"types":[]}];
implementors["scoped_owner"] = [{"text":"impl !Freeze for ScopedOwner","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()