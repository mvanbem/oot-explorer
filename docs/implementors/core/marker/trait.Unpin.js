(function() {var implementors = {};
implementors["deref_map"] = [{"text":"impl&lt;'a, T, FRef, FMut, R:&nbsp;?Sized&gt; Unpin for MapMut&lt;'a, T, FRef, FMut, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;FMut: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;FRef: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, F, R:&nbsp;?Sized&gt; Unpin for MapRef&lt;'a, T, F, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["oot_explorer_core"] = [{"text":"impl&lt;'scope&gt; Unpin for Collision&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for Vertex&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for Triangle&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for TriangleType&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for CameraData&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for WaterBox&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope, T&gt; Unpin for Iter&lt;'scope, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for VromAddr","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for FileSystemTableEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for LazyFileSystem&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for FileMetadata","synthetic":true,"types":[]},{"text":"impl Unpin for VirtualSliceError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DisplayList&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Qu0_16","synthetic":true,"types":[]},{"text":"impl Unpin for Qu10_2","synthetic":true,"types":[]},{"text":"impl Unpin for Qu1_11","synthetic":true,"types":[]},{"text":"impl Unpin for MtxFlags","synthetic":true,"types":[]},{"text":"impl Unpin for GeometryMode","synthetic":true,"types":[]},{"text":"impl Unpin for OtherModeL","synthetic":true,"types":[]},{"text":"impl Unpin for OtherModeLMask","synthetic":true,"types":[]},{"text":"impl Unpin for OtherModeH","synthetic":true,"types":[]},{"text":"impl Unpin for OtherModeHMask","synthetic":true,"types":[]},{"text":"impl Unpin for CombinerReference","synthetic":true,"types":[]},{"text":"impl Unpin for ColorCombine","synthetic":true,"types":[]},{"text":"impl Unpin for AlphaCombine","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for UnlitVertex&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for LitVertex&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Instruction","synthetic":true,"types":[]},{"text":"impl Unpin for TextureFormat","synthetic":true,"types":[]},{"text":"impl Unpin for TextureDepth","synthetic":true,"types":[]},{"text":"impl Unpin for ColorInput","synthetic":true,"types":[]},{"text":"impl Unpin for AlphaInput","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for Actor&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for AlternateHeadersHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for RoomHeaderType","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for RoomHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for ActorListHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for WindHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for BehaviorHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for MeshHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for ObjectListHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for TimeHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for RoomSkyboxHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for EndHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for RoomSoundHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for RoomHeaderVariant&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SceneHeaderType","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for SceneHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for StartPositionsHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for CollisionHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for RoomListHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for RoomListEntry&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for EntranceListHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for Entrance&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for SpecialObjectsHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ElfMessage","synthetic":true,"types":[]},{"text":"impl Unpin for GlobalObject","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for PathwaysHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for TransitionActorsHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for TransitionActor&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for LightingHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for SceneSkyboxHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for ExitListHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for Exit&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for EndHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for SceneSoundHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for CameraAndWorldMapHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Camera","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for SceneHeaderVariant&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for MeshType","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for Mesh&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for SimpleMesh&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for SimpleMeshEntry&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for JfifMeshType","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for JfifMesh&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for SingleJfif&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for MultipleJfif&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for MultipleJfifEntry&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for Background&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for ClippedMesh&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for ClippedMeshEntry&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for MeshVariant&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for JfifMeshVariant&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectId","synthetic":true,"types":[]},{"text":"impl Unpin for BitfieldDescriptor","synthetic":true,"types":[]},{"text":"impl Unpin for BitfieldSpan","synthetic":true,"types":[]},{"text":"impl Unpin for EnumDescriptor","synthetic":true,"types":[]},{"text":"impl Unpin for PointerDescriptor","synthetic":true,"types":[]},{"text":"impl Unpin for PrimitiveType","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Sourced&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RangeSourced&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for StructDescriptor","synthetic":true,"types":[]},{"text":"impl Unpin for FieldDescriptor","synthetic":true,"types":[]},{"text":"impl Unpin for UnionDescriptor","synthetic":true,"types":[]},{"text":"impl Unpin for StructFieldLocation","synthetic":true,"types":[]},{"text":"impl Unpin for TypeDescriptor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Rom&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for RomAddr","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for Room&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for Scene&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; Unpin for Lighting&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SegmentAddr","synthetic":true,"types":[]},{"text":"impl Unpin for Segment","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SegmentCtx&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SegmentResolveError","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Slice&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SceneTableEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for MaxEffort","synthetic":true,"types":[]}];
implementors["oot_explorer_expr"] = [{"text":"impl Unpin for Key","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Context&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for ExprWithContext&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Expr&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["oot_explorer_gl"] = [{"text":"impl Unpin for Batch","synthetic":true,"types":[]},{"text":"impl Unpin for DisplayListInterpreter","synthetic":true,"types":[]},{"text":"impl Unpin for RcpState","synthetic":true,"types":[]},{"text":"impl Unpin for Point","synthetic":true,"types":[]},{"text":"impl Unpin for Matrix","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for MatrixCol&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for MatrixColMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for RdpOtherMode","synthetic":true,"types":[]},{"text":"impl Unpin for CombinerState","synthetic":true,"types":[]},{"text":"impl Unpin for TextureSource","synthetic":true,"types":[]},{"text":"impl Unpin for Tile","synthetic":true,"types":[]},{"text":"impl Unpin for TileDimensions","synthetic":true,"types":[]},{"text":"impl Unpin for TileAttributes","synthetic":true,"types":[]},{"text":"impl Unpin for RspTextureState","synthetic":true,"types":[]},{"text":"impl Unpin for Tmem","synthetic":true,"types":[]},{"text":"impl Unpin for TmemRegion","synthetic":true,"types":[]},{"text":"impl Unpin for GetSourceError","synthetic":true,"types":[]},{"text":"impl Unpin for TmemSource","synthetic":true,"types":[]},{"text":"impl Unpin for Cycle","synthetic":true,"types":[]},{"text":"impl Unpin for ShaderState","synthetic":true,"types":[]},{"text":"impl Unpin for TextureState","synthetic":true,"types":[]},{"text":"impl Unpin for TextureParams","synthetic":true,"types":[]},{"text":"impl Unpin for TexCoordParams","synthetic":true,"types":[]},{"text":"impl Unpin for TextureDescriptor","synthetic":true,"types":[]},{"text":"impl Unpin for PaletteSource","synthetic":true,"types":[]},{"text":"impl Unpin for DecodedTexture","synthetic":true,"types":[]},{"text":"impl Unpin for DecodeError","synthetic":true,"types":[]}];
implementors["oot_explorer_web"] = [{"text":"impl Unpin for Context","synthetic":true,"types":[]}];
implementors["scoped_owner"] = [{"text":"impl Unpin for ScopedOwner","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()