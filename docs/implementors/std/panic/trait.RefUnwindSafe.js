(function() {var implementors = {};
implementors["deref_map"] = [{"text":"impl&lt;'a, T, FRef, FMut, R:&nbsp;?Sized&gt; RefUnwindSafe for MapMut&lt;'a, T, FRef, FMut, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;FMut: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;FRef: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, F, R:&nbsp;?Sized&gt; RefUnwindSafe for MapRef&lt;'a, T, F, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["oot_explorer_core"] = [{"text":"impl&lt;'scope&gt; RefUnwindSafe for Collision&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for Vertex&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for Triangle&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for TriangleType&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for CameraData&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for WaterBox&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope, T&gt; RefUnwindSafe for Iter&lt;'scope, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VromAddr","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FileSystemTableEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for LazyFileSystem&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileMetadata","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VirtualSliceError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DisplayList&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Qu0_16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Qu10_2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Qu1_11","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MtxFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GeometryMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OtherModeL","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OtherModeLMask","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OtherModeH","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OtherModeHMask","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CombinerReference","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorCombine","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AlphaCombine","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for UnlitVertex&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for LitVertex&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Instruction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureDepth","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorInput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AlphaInput","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for Actor&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for AlternateHeadersHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RoomHeaderType","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for RoomHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for ActorListHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for WindHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for BehaviorHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for MeshHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for ObjectListHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for TimeHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for RoomSkyboxHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for EndHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for RoomSoundHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for RoomHeaderVariant&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SceneHeaderType","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for SceneHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for StartPositionsHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for CollisionHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for RoomListHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for RoomListEntry&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for EntranceListHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for Entrance&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for SpecialObjectsHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ElfMessage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlobalObject","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for PathwaysHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for TransitionActorsHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for TransitionActor&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for LightingHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for SceneSkyboxHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for ExitListHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for Exit&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for EndHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for SceneSoundHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for CameraAndWorldMapHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Camera","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for SceneHeaderVariant&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MeshType","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for Mesh&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for SimpleMesh&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for SimpleMeshEntry&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for JfifMeshType","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for JfifMesh&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for SingleJfif&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for MultipleJfif&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for MultipleJfifEntry&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for Background&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for ClippedMesh&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for ClippedMeshEntry&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for MeshVariant&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for JfifMeshVariant&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ObjectId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BitfieldDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BitfieldSpan","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EnumDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PointerDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrimitiveType","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Sourced&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for RangeSourced&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FieldDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnionDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StructFieldLocation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeDescriptor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Rom&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RomAddr","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for Room&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for Scene&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; RefUnwindSafe for Lighting&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SegmentAddr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Segment","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SegmentCtx&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SegmentResolveError","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Slice&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SceneTableEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxEffort","synthetic":true,"types":[]}];
implementors["oot_explorer_expr"] = [{"text":"impl RefUnwindSafe for Key","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Context&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for ExprWithContext&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Expr&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["oot_explorer_gl"] = [{"text":"impl RefUnwindSafe for Batch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayListInterpreter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RcpState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Point","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Matrix","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MatrixCol&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MatrixColMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RdpOtherMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CombinerState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureSource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Tile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TileDimensions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TileAttributes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RspTextureState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Tmem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TmemRegion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetSourceError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TmemSource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Cycle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShaderState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureParams","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TexCoordParams","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PaletteSource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DecodedTexture","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DecodeError","synthetic":true,"types":[]}];
implementors["oot_explorer_web"] = [{"text":"impl RefUnwindSafe for Context","synthetic":true,"types":[]}];
implementors["scoped_owner"] = [{"text":"impl !RefUnwindSafe for ScopedOwner","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()