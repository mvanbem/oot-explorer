(function() {var implementors = {};
implementors["deref_map"] = [{"text":"impl&lt;'a, T, FRef, FMut, R:&nbsp;?Sized&gt; UnwindSafe for MapMut&lt;'a, T, FRef, FMut, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;FMut: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;FRef: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, F, R:&nbsp;?Sized&gt; UnwindSafe for MapRef&lt;'a, T, F, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["oot_explorer_core"] = [{"text":"impl&lt;'scope&gt; UnwindSafe for Collision&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for Vertex&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for Triangle&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for TriangleType&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for CameraData&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for WaterBox&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope, T&gt; UnwindSafe for Iter&lt;'scope, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VromAddr","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FileSystemTableEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for LazyFileSystem&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FileMetadata","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VirtualSliceError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for DisplayList&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Qu0_16","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Qu10_2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Qu1_11","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MtxFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GeometryMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OtherModeL","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OtherModeLMask","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OtherModeH","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OtherModeHMask","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CombinerReference","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorCombine","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AlphaCombine","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for UnlitVertex&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for LitVertex&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Instruction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureDepth","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ColorInput","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AlphaInput","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for Actor&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for AlternateHeadersHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RoomHeaderType","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for RoomHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for ActorListHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for WindHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for BehaviorHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for MeshHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for ObjectListHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for TimeHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for RoomSkyboxHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for EndHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for RoomSoundHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for RoomHeaderVariant&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SceneHeaderType","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for SceneHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for StartPositionsHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for CollisionHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for RoomListHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for RoomListEntry&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for EntranceListHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for Entrance&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for SpecialObjectsHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ElfMessage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalObject","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for PathwaysHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for TransitionActorsHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for TransitionActor&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for LightingHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for SceneSkyboxHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for ExitListHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for Exit&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for EndHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for SceneSoundHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for CameraAndWorldMapHeader&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Camera","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for SceneHeaderVariant&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MeshType","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for Mesh&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for SimpleMesh&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for SimpleMeshEntry&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for JfifMeshType","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for JfifMesh&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for SingleJfif&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for MultipleJfif&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for MultipleJfifEntry&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for Background&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for ClippedMesh&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for ClippedMeshEntry&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for MeshVariant&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for JfifMeshVariant&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ObjectId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BitfieldDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BitfieldSpan","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EnumDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PointerDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrimitiveType","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Sourced&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for RangeSourced&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FieldDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnionDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructFieldLocation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeDescriptor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Rom&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RomAddr","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for Room&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for Scene&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'scope&gt; UnwindSafe for Lighting&lt;'scope&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SegmentAddr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Segment","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SegmentCtx&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SegmentResolveError","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Slice&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for SceneTableEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxEffort","synthetic":true,"types":[]}];
implementors["oot_explorer_expr"] = [{"text":"impl UnwindSafe for Key","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Context&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for ExprWithContext&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Expr&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["oot_explorer_gl"] = [{"text":"impl UnwindSafe for Batch","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayListInterpreter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RcpState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Point","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Matrix","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MatrixCol&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for MatrixColMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RdpOtherMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CombinerState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureSource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Tile","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TileDimensions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TileAttributes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RspTextureState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Tmem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TmemRegion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GetSourceError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TmemSource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Cycle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShaderState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureParams","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TexCoordParams","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TextureDescriptor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PaletteSource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DecodedTexture","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DecodeError","synthetic":true,"types":[]}];
implementors["oot_explorer_web"] = [{"text":"impl UnwindSafe for Context","synthetic":true,"types":[]}];
implementors["scoped_owner"] = [{"text":"impl !UnwindSafe for ScopedOwner","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()